
                                      电信宽带运营支撑系统子系统电信采集系统

需求分析：
在电信的业务中，有一种服务器出租业务，收费方式可以是按时收费。
因此我们需要建立一个采集系统，对用户的使用信息进行定期数据采集。
分为子服务器、中央服务器。子服务器(AAA服务器)解析计费信息并发送至中央服务器，
中央服务器接受数据并插入数据库中由整合模块对数据进行整合处理。
那么我们开发的电信数据采集系统就是通过读取(AAA)服务器系统日志文件中用户登入登出信息。
得到用户登录系统的登入登出时刻、登录时长等数据。
最后把匹配处理好的数据保存成电信工作人员可以阅读的文本文件，做为电信收费依据。


电信数据采集系统主要通过以下模块来实现核心功能。		
	   
采集模块  * 功能：采集原始计费文件，整理成BIDR类数据清单
                  负责采集由AAA服务器产生的数据
		  并按照登入登出的关系匹配成一条完整的登录记录
	  * 实现过程：
	   1，初始化，获取采集文件(AAA服务器产生的)的信息。
	   2，开始采集数据信息 我们要做的操作是，读取数据，分割数据，对数据进行处理，准备发送到服务器。
	   使用字符流逐行读取数据，按照文件中的|标记分割成5块。
	   采集的数据分俩种情况（7上8下来区分）
		 1,用户上线了同时也下线的数据,称为完整信息。
		 2,用户上线还未下线的数据，称为不完整信息。
	   处理两种信息
		 1，完整信息直接封装成对象。
		 2，不完整信息要进行备份，在一下次采集中,需要把这个备份的数据重新读出来使用,
		    因为用户可能在一下次采集中下线了。
网络模块  * 功能 
	  客户端与服务端通过TCP方式连接后，运用socket技术建立连接
	  通过输入输出流，客户端把采集到的数据，封装成对象存放入内存集合中发送到服务端。
	  服务端接收发送过来的数据，调用入库模块，将数据保存到数据库。		    

入库模块  * 功能：负责将服务器接收到的数据保存到指定的数据库表中，在数据库中对数据进行整合。
	    按照日期，创建31张表，每张表对应一个日子，不同的数据需要插入到不同的表里面。
	    
		
配置模块  *功能：实例化其他模块,降低模块之间的耦合性,通过配置文件配置多个模块之间关系,使各个模块遵循高内聚,低耦合。
	  该模块相当于一个工厂。产生各个模块对象
	  读取各个模块所需的信息,并且把信息注入到每个模块中
	  实现过程(提示)：
	  通过解析xml文件，临时将解析内容保存到Properties文件中
	  根据映射关系，再通过反射机制获取类名,从而创建对象
	  并将类名和对象封装到Map集合，通过类名映射获取相应的模块所需信息。
	
日志模块  * 功能：将系统运行过程信息记入日志文件，以备查验
	    实现方式是：借助第三方工具包(例如：Log4J)
	    
备份模块  * 功能：在网络或数据库发生异常的情况下将本次采集或接收到的BIDR数据清单持久存储；
                  下次采集可以取出上次持久存储的BIDR数据清单
                  在采集信息时候，负责备份一些没有处理完的数据，也就是用户上线后还未下线的信息，
		  防止数据丢失。下次采集需要的时候再从本地加载备份文件。


===============================================================================================================

数据库:
	1.有31张表
		t_detail_1
		..
		t_detail_31
		
		表中的列:
		(
			aaa_login_name	VARCHAR2(30),
			login_ip	VARCHAR2(32),
			login_date	DATE,
			logout_date	DATE,
			nas_ip	VARCHAR2(32),
			time_duration	NUMBER(10)
        )
	2.每张表对应一个日子
	3.不同的数据需要插入到不同的表里面
		例如:1号(不关注年和月)产生的数据,就需要把数据插入到第1张表中,15号产生的数据,就需要插入到第15张表里面
	4.建表语句
		使用PL/SQL建表
		BEGIN
		  FOR i IN 1..31 LOOP
			EXECUTE IMMEDIATE
			  'CREATE TABLE t_detail_'||TO_CHAR(i)||
			  '(
				aaa_login_name VARCHAR2(30),
				login_ip VARCHAR2(32),
				login_date DATE,
				logout_date DATE,
				nas_ip VARCHAR2(32),
				time_duration NUMBER(10)
			   )';
		  END LOOP;
		END;
		/

		使用PL/SQL删除表
		BEGIN
		  FOR i IN 1..31 LOOP
			EXECUTE IMMEDIATE
			  'DROP TABLE t_detail_'||TO_CHAR(i);
		  END LOOP;
		END;
		/
===============================================================================================================










